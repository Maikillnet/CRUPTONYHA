# indicators.py
# -*- coding: utf-8 -*-
"""
–ü—Ä–∞–≤–∏–ª–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –≤ —Ç–æ—á–Ω–æ—Å—Ç–∏ –∫–∞–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:

–ò–Ω—Ñ–ª—è—Ü–∏–æ–Ω–Ω—ã–µ –∏ –ø—Ä–æ—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ (–≥–¥–µ –ø–µ—Ä–µ–≥—Ä–µ–≤ = —Ä–∏—Å–∫ —É–∂–µ—Å—Ç–æ—á–µ–Ω–∏—è):
- CPI, PPI, NFP, Retail Sales:
    –§–∞–∫—Ç > –ü—Ä–æ–≥–Ω–æ–∑ ‚Üí SHORT
    –§–∞–∫—Ç < –ü—Ä–æ–≥–Ω–æ–∑ ‚Üí LONG

–ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ (–±–æ–ª—å—à–µ = —Ö—É–∂–µ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∫–∏ ‚Üí –º—è–≥—á–µ –ø–æ–ª–∏—Ç–∏–∫–∞):
- –£—Ä–æ–≤–µ–Ω—å –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü—ã, –ü–µ—Ä–≤–∏—á–Ω—ã–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø–æ—Å–æ–±–∏–µ, –ó–∞–ø–∞—Å—ã —Å—ã—Ä–æ–π –Ω–µ—Ñ—Ç–∏:
    –§–∞–∫—Ç > –ü—Ä–æ–≥–Ω–æ–∑ ‚Üí LONG
    –§–∞–∫—Ç < –ü—Ä–æ–≥–Ω–æ–∑ ‚Üí SHORT

FOMC (—Å—Ç–∞–≤–∫–∞, —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –§–∞–∫—Ç vs –ü—Ä–µ–¥—ã–¥—É—â–µ–µ):
    –°—Ç–∞–≤–∫–∞ ‚Üë ‚Üí SHORT
    –°—Ç–∞–≤–∫–∞ ‚Üì ‚Üí LONG
"""
from typing import Dict, Any
from storage import list_custom_indicators

Indicator = Dict[str, Any]

# === –ë–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ ===
def _rule_long_if_actual_lt_forecast(row):
    a, f = row.get("actual_val"), row.get("forecast_val")
    if a is None or f is None:
        return "NEUTRAL"
    return "LONG" if a < f else "SHORT"

def _rule_long_if_actual_gt_forecast(row):
    a, f = row.get("actual_val"), row.get("forecast_val")
    if a is None or f is None:
        return "NEUTRAL"
    return "LONG" if a > f else "SHORT"

def _rule_short_if_actual_gt_forecast(row):
    """–ò–Ω—Ñ–ª—è—Ü–∏–æ–Ω–Ω—ã–µ –∏ –ø—Ä–æ—ç–∫–æ–Ω. –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏: –§–∞–∫—Ç > –ü—Ä–æ–≥–Ω–æ–∑ ‚Üí SHORT"""
    a, f = row.get("actual_val"), row.get("forecast_val")
    if a is None or f is None:
        return "NEUTRAL"
    return "SHORT" if a > f else "LONG"

def _rule_fomc_rate(row):
    """
    FOMC: —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –§–∞–∫—Ç (—Ç–µ–∫—É—â–∞—è —Å—Ç–∞–≤–∫–∞) —Å –ü—Ä–æ–≥–Ω–æ–∑–æ–º (–æ–∂–∏–¥–∞–Ω–∏–µ–º).
    –§–∞–∫—Ç < –ü—Ä–æ–≥–Ω–æ–∑ ‚Üí LONG; –§–∞–∫—Ç ‚â• –ü—Ä–æ–≥–Ω–æ–∑ ‚Üí SHORT.
    """
    a, f = row.get("actual_val"), row.get("forecast_val")
    if a is None or f is None:
        return "NEUTRAL"
    return "LONG" if a < f else "SHORT"

# === –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–æ–≤ –ø—Ä–∞–≤–∏–ª –¥–ª—è –∫–∞—Å—Ç–æ–º–æ–≤ ===
_RULES = {
    "LT": _rule_long_if_actual_lt_forecast,
    "GT": _rule_long_if_actual_gt_forecast,
    "FOMC": _rule_fomc_rate,
}

# ===== –ü–†–ï–°–ï–¢–´ =====
PRESET_INDICATORS: Dict[str, Indicator] = {
    # –ò–Ω—Ñ–ª—è—Ü–∏–æ–Ω–Ω—ã–µ
    "CPI": {
        "title": "–ò–Ω–¥–µ–∫—Å –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏—Ö —Ü–µ–Ω (CPI / Core CPI)",
        "url": "https://www.investing.com/economic-calendar/core-cpi-56",
        "rule": _rule_short_if_actual_gt_forecast,
    },
    "PPI": {
        "title": "–ò–Ω–¥–µ–∫—Å —Ü–µ–Ω –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π (PPI)",
        "url": "https://ru.investing.com/economic-calendar/ppi-238",
        "rule": _rule_short_if_actual_gt_forecast,
    },
    "CORE_PCE": {
        "title": "–ë–∞–∑–æ–≤—ã–π —Ü–µ–Ω–æ–≤–æ–π –∏–Ω–¥–µ–∫—Å —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ –ª–∏—á–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ (Core PCE), –º/–º",
        "url": "https://ru.investing.com/economic-calendar/core-pce-price-index-61",
        "rule": _rule_short_if_actual_gt_forecast,
    },
    # –ü—Ä–æ—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ
    "NFP": {
        "title": "–ù–µ—Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å (NFP)",
        "url": "https://www.investing.com/economic-calendar/nonfarm-payrolls-227",
        "rule": _rule_short_if_actual_gt_forecast,
    },
    "RETAIL_SALES": {
        "title": "–†–æ–∑–Ω–∏—á–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏",
        "url": "https://www.investing.com/economic-calendar/retail-sales-256",
        "rule": _rule_short_if_actual_gt_forecast,
    },
    # –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ
    "UNEMPLOYMENT": {
        "title": "–£—Ä–æ–≤–µ–Ω—å –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü—ã",
        "url": "https://www.investing.com/economic-calendar/unemployment-rate-300",
        "rule": _rule_long_if_actual_gt_forecast,
    },
    "JOBLESS_CLAIMS": {
        "title": "–ü–µ—Ä–≤–∏—á–Ω—ã–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø–æ—Å–æ–±–∏–µ –ø–æ –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–µ",
        "url": "https://www.investing.com/economic-calendar/initial-jobless-claims-294",
        "rule": _rule_long_if_actual_gt_forecast,
    },
    "CRUDE_OIL_INV": {
        "title": "–ó–∞–ø–∞—Å—ã —Å—ã—Ä–æ–π –Ω–µ—Ñ—Ç–∏ (EIA)",
        "url": "https://www.investing.com/economic-calendar/eia-crude-oil-inventories-75",
        "rule": _rule_long_if_actual_gt_forecast,
    },
    "ISM_MANUFACTURING_PMI": {
        "title": "–ò–Ω–¥–µ–∫—Å –¥–µ–ª–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–º —Å–µ–∫—Ç–æ—Ä–µ (ISM Manufacturing PMI)",
        "url": "https://ru.investing.com/economic-calendar/ism-manufacturing-pmi-173",
        "rule": _rule_short_if_actual_gt_forecast,
    },
    # –°—Ç–∞–≤–∫–∞ –§–†–°
    "FOMC_RATE": {
        "title": "–†–µ—à–µ–Ω–∏–µ –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–π —Å—Ç–∞–≤–∫–µ –§–†–° –°–®–ê",
        "url": "https://ru.investing.com/economic-calendar/interest-rate-decision-168",
        "rule": _rule_fomc_rate,
    },
}

# === –°–ª–∏—è–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–æ–≤ –∏ –∫–∞—Å—Ç–æ–º–æ–≤ ===
async def get_indicators(chat_id: int) -> Dict[str, Indicator]:
    result: Dict[str, Indicator] = dict(PRESET_INDICATORS)
    customs = await list_custom_indicators(chat_id)
    for ci in customs:
        rule_func = _RULES.get((ci.get("rule") or "").upper(), _rule_long_if_actual_lt_forecast)
        result[ci["key"]] = {
            "title": ci["title"],
            "url": ci["url"],
            "rule": rule_func,
        }
    return result

def rules_hints() -> str:
    return (
        "üìò <b>–ü–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º:</b>\n"
        "‚Ä¢ <b>LT</b> ‚Äî —Å–∏–≥–Ω–∞–ª LONG, –µ—Å–ª–∏ –§–∞–∫—Ç –º–µ–Ω—å—à–µ –ü—Ä–æ–≥–Ω–æ–∑–∞\n"
        "‚Ä¢ <b>GT</b> ‚Äî —Å–∏–≥–Ω–∞–ª LONG, –µ—Å–ª–∏ –§–∞–∫—Ç –±–æ–ª—å—à–µ –ü—Ä–æ–≥–Ω–æ–∑–∞\n"
        "‚Ä¢ <b>FOMC</b> ‚Äî —Ä–µ—à–µ–Ω–∏–µ –§–†–°:\n"
        "   ‚Ü≥ –§–∞–∫—Ç < –ü—Ä–æ–≥–Ω–æ–∑–∞ ‚Üí LONG\n"
        "   ‚Ü≥ –§–∞–∫—Ç ‚â• –ü—Ä–æ–≥–Ω–æ–∑–∞ ‚Üí SHORT"
    )